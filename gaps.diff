diff -ru a/config.def.h b/config.def.h
--- a/config.def.h	2012-01-17 15:02:02.742224301 -0500
+++ b/config.def.h	2012-01-17 15:02:32.558729439 -0500
@@ -9,6 +9,7 @@
 static const char selbgcolor[]      = "#005577";
 static const char selfgcolor[]      = "#eeeeee";
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int gappx     = 6;        /* gap pixel between windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const Bool showbar           = True;     /* False means no bar */
 static const Bool topbar            = True;     /* False means bottom bar */
diff -ru a/dwm.c b/dwm.c
--- a/dwm.c	2012-01-17 15:02:02.742224301 -0500
+++ b/dwm.c	2012-01-17 15:03:31.358410892 -0500
@@ -283,6 +283,7 @@
 static DC dc;
 static Monitor *mons = NULL, *selmon = NULL;
 static Window root;
+static int globalborder;
 
 /* configuration, allows nested code to access above variables */
 #include "config.h"
@@ -1350,11 +1351,17 @@
 void
 resizeclient(Client *c, int x, int y, int w, int h) {
 	XWindowChanges wc;
+	
+	if(c->isfloating || selmon->lt[selmon->sellt]->arrange == NULL) { globalborder = 0 ; }
+	else {
+		if (selmon->lt[selmon->sellt]->arrange == monocle) { globalborder = 0 - borderpx ; }
+		else { globalborder =  gappx ; }
+	}
 
-	c->oldx = c->x; c->x = wc.x = x;
-	c->oldy = c->y; c->y = wc.y = y;
-	c->oldw = c->w; c->w = wc.width = w;
-	c->oldh = c->h; c->h = wc.height = h;
+	c->oldx = c->x; c->x = wc.x = x + globalborder ;
+	c->oldy = c->y; c->y = wc.y = y + globalborder ;
+	c->oldw = c->w; c->w = wc.width = w - 2 * globalborder ;
+	c->oldh = c->h; c->h = wc.height = h - 2 * globalborder ;
 	wc.border_width = c->bw;
 	XConfigureWindow(dpy, c->win, CWX|CWY|CWWidth|CWHeight|CWBorderWidth, &wc);
 	configure(c);
@@ -1718,12 +1725,12 @@
 		if(i < m->nmaster) {
 			h = (m->wh - my) / (MIN(n, m->nmaster) - i);
 			resize(c, m->wx, m->wy + my, mw - (2*c->bw), h - (2*c->bw), False);
-			my += HEIGHT(c);
+			my += HEIGHT(c) + 2 * globalborder;
 		}
 		else {
 			h = (m->wh - ty) / (n - i);
 			resize(c, m->wx + mw, m->wy + ty, m->ww - mw - (2*c->bw), h - (2*c->bw), False);
-			ty += HEIGHT(c);
+			ty += HEIGHT(c) + 2 * globalborder;
 		}
 }
 

